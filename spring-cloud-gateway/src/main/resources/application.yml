#서버 실행 포트 지정
server:
  port: 8000

#eureka client 등록
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

#eureka server에 client로 등록될 application name 지정
spring:
  application:
    name: api-gateway-service
  cloud:
    gateway:
      default-filters:
        - GlobalFilter
      #라우트 정보 등록
      routes:
        #인증이 필요없는 서비스
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/unauthorization/**
        #user-service
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        #activity-service
        - id: activity-service
          uri: lb://ACTIVITY-SERVICE
          predicates:
            - Path=/activity-service/**
          filters:
            - RewritePath=/activity-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        #order-service
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
#Debugging setting
logging:
  level:
    com.example.springcloud: DEBUG

#mili sec = sec * 1000
#43200000 = 12시간
#secret = 아무거나 상관없음 = 비밀 키 값
token:
  expiration_time: 3600000
  secret: YzJSbWJtZHNhMnB1YzJSbVp5ZHFNMmx4Y21wbk5ETnZjR3BuYlRRek1EbHBkR2N0YXpRelp6TTFOR2RvZERRPT3jhYHjhLTjhYfjhY7jhYHjhLTjhYfjhLntmLjrgpjjhaPshJzjhZc07J=