openapi: 3.0.1
info:
  title: User Service
  description: User Service API Specification
  version: 0.0.1
servers:
- url: http://3.39.126.140:8000
tags: []
paths:
  /collection:
    get:
      tags:
      - collection
      operationId: 컬렉션 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection1024043052'
              examples:
                컬렉션 조회:
                  value: "[ ]"
  /msg/{stateMSG}:
    put:
      tags:
      - 유저 정보 업데이트
      description: 유저 정보 업데이트
      operationId: 유저 정보 업데이트
      parameters:
      - name: stateMSG
        in: path
        description: 상태 메세지
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/msg-stateMSG486549215'
              examples:
                유저 정보 업데이트:
                  value: '"OK"'
  /name/{characterName}:
    put:
      tags:
      - 캐릭터 이름 변경
      description: 캐릭터 이름 변경
      operationId: 캐릭터 이름 변경
      parameters:
      - name: characterName
        in: path
        description: 캐릭터 이름 변경
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/msg-stateMSG486549215'
              examples:
                캐릭터 이름 변경:
                  value: '"OK"'
  /unauthorization/kakao-login:
    get:
      tags:
      - 카카오 로그인
      description: "카카오 토큰으로 서버 엑세스 토큰, 리프레시 토큰 발급"
      operationId: 카카오 로그인 서비스
      parameters:
      - name: Authorization
        in: header
        description: Bearer AccessToken
        required: true
        schema:
          type: string
        example: Bearer Gkv5ltL0dkL1mhw-NPFXRju5mcimFlDE6bQtzcoNCisNHgAAAYgoebFG
      responses:
        "201":
          description: "201"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response.Tokens'
              examples:
                카카오 로그인 서비스:
                  value: |-
                    {
                      "access_token" : "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNzEzNTgyNDgyIiwiZXhwIjoxNjg0MzEwMDk5fQ.n103iAwyIaPcE3o7ZheEk-k3a6VahLOFuhYceXxaH6mBWb4Ghk-qr0ExGOZnlrUK-91qfZLMu9YmaAgaTUnbrA",
                      "refresh_token" : "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNzEzNTgyNDgyIiwiZXhwIjoxNjg2ODk4NDk5fQ.GU3_lWf7BEEqYGXJ1XO3VzB9mtIPNCkblj8G4ByDft_UZx4HraJLPvO8HYjlmhlQ8zHPOLzVfkpAgQe-r_WCng"
                    }
  /unauthorization/refresh:
    get:
      tags:
      - 서버 토큰 재발급
      description: refresh 토큰을 사용해서 access 토큰 재발급
      operationId: 서버 토큰 재발급
      parameters:
      - name: Authorization
        in: header
        description: Bearer RefreshToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyNzEzNTgyNDgyIiwiZXhwIjoxNjg2ODk4NDM3fQ.tvIcC2tu2vRz8c0RhHzPrHZ7e8alJsNNW_l0aLA2IiZjEhbs1xgrx_7S8ylDdCo9mG0FZuZrdYpbCghoOY9Z2g
      responses:
        "201":
          description: "201"
          headers:
            Authorization:
              description: Bearer AccessToken
              schema:
                type: string
      security:
      - bearerAuthJWT: []
  /user:
    get:
      tags:
      - 유저 정보 조회
      description: 유저 아이디로 유저 정보 조회
      operationId: 유저 정보 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response.User'
              examples:
                유저 정보 조회:
                  value: |-
                    {
                      "userId" : 2713582482,
                      "characterName" : "옥토퍼스",
                      "characterUrl" : "https://octo-image-bucket.s3.ap-northeast-2.amazonaws.com/%EA%B8%B0%EB%B3%B8%20%EB%AC%B8%EC%96%B4.png",
                      "experienceValue" : 16,
                      "stateMsg" : "안녕하세요~",
                      "thumbnailImageUrl" : "http://k.kakaocdn.net/dn/Kdqq9/btr7iNz0hMt/PV9j3Vefk9iRsJEHk2grcK/img_110x110.jpg",
                      "sleepTime" : 480,
                      "distance" : 1.5,
                      "dday" : "2023-06-14T15:00:00.000+00:00"
                    }
components:
  schemas:
    Response.User:
      title: Response.User
      type: object
      properties:
        stateMsg:
          type: string
          description: 상태 메세지
        thumbnailImageUrl:
          type: string
          description: 썸네일 이미지
        experienceValue:
          type: number
          description: 경험치
        distance:
          type: number
          description: 목표 러닝 거리
        dday:
          type: string
          description: 목표 기간
        characterName:
          type: string
          description: 캐릭터 이름
        sleepTime:
          type: number
          description: 목표 수면시간
        characterUrl:
          type: string
          description: 캐릭터 이미지
        userId:
          type: number
          description: 유저 아이디
    collection1024043052:
      type: array
      description: 컬렉션 리스트
      items:
        oneOf:
        - type: object
        - type: boolean
        - type: string
        - type: number
    Response.Tokens:
      title: Response.Tokens
      type: object
      properties:
        access_token:
          type: string
          description: 서버 엑세스 토큰
        refresh_token:
          type: string
          description: 서버 리프레쉬 토큰
    msg-stateMSG486549215:
      type: object
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
