plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.16.2'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
//    snippetsDir = file('build/generated-snippets')
    set('springCloudVersion', "2021.0.6")
}

//configurations {
//    asciidoctorExtensions
//}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'mysql:mysql-connector-java:8.0.32'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.90.Final:osx-aarch_64'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
//    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//openapi3 {
//    server = 'https://localhost:8080'
//    title = 'Octo Dream'
//    description = 'OctoDream API Specification'
//    version = '0.0.1'
//    format = 'yml'
//    outputFileNamePrefix = 'payment-service'
//    outputDirectory = 'src/main/resources/static/docs'
//}
//
//test {
//    useJUnitPlatform()
//    outputs.dir snippetsDir
//}
//
//asciidoctor {
//    configurations "asciidoctorExtensions"
//    inputs.dir snippetsDir
//    dependsOn test
//}
//
//asciidoctor.doFirst{
//    delete file('src/main/resources/static/docs')	//(10)
//}
//
//task copyDocument(type: Copy){	//(11)
//    dependsOn asciidoctor		//(12)
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}
//
//bootJar {
//    dependsOn copyDocument
//    from ("${asciidoctor.outputDir}/html5") {
//        into 'static/docs'
//    }
//}

